/*
Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums.
Example 1:
  Input: nums = [4,3,2,7,8,2,3,1]
  Output: [5,6]
Example 2:
  Input: nums = [1,1]
  Output: [2]
*/


import java.util.*;
public class Main
{
    public static List<Integer> findDisappearedNumbers(int[] nums) 
    {
        List<Integer> l = new ArrayList<>();
        int freq[]=new int[nums.length+1];

        for(int i=0;i<nums.length;i++)
        {
            freq[nums[i]]++;
        }

        for(int i=1;i<freq.length;i++)
        {
            if(freq[i]==0)
            {
                l.add(i);
            }
        }
        return l;

        /*
        List<Integer> l = new ArrayList<>();

        for(int i=0;i<nums.length;i++)
        {
            int j= Math.abs(nums[i])-1;

            if(nums[j]<0) continue;

            nums[j] *= -1;
        }
        for(int i=0;i<nums.length;i++)
        {
            if(nums[i]>0)
            {
                l.add(i+1);
            }
        }
        return l;
        */

        /*
        //CYCLIC SORT
         List<Integer> ans = new ArrayList<>();
        int i = 0;
        while(i < nums.length){
            int correct = nums[i] -1;// index start from 0
            if(nums[i] != nums[correct]){
                swap(nums,i,correct);
            }
            else{
                i++;
            }
        }
        // after this the array will be sorted and we will be having particular element at its cooresponding index.
        for(int j = 0; j<nums.length;j++){
            if(nums[j]!= j+1){
                ans.add(j+1);
            }
           
        }
        return ans;
    }
    void swap(int[] nums,int a, int b){
        int temp = nums[a];
        nums[a] = nums[b];
        nums[b] =temp;
    }
    */
    }

	public static void main(String[] args) 
	{
		int arr[]={4,3,2,7,8,2,3,1};
		List<Integer> l=  findDisappearedNumbers(arr);
		System.out.println("Output : "+l);
	}
}
