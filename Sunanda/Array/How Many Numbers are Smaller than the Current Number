/*
Given the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number of valid j's such that j != i and nums[j] < nums[i].
Return the answer in an array.
Example 1:
  Input: nums = [8,1,2,2,3]
  Output: [4,0,1,1,3]
Example 2:
  Input: nums = [6,5,4,8]
  Output: [2,1,0,3]
Example 3:
  Input: nums = [7,7,7,7]
  Output: [0,0,0,0]
*/

import java.util.*;
public class Main
{
    public static int[] smallerNumbersThanCurrent(int[] nums) 
    {
        /*
        //BRUTE FORCE
        int ans[] = new int[nums.length];
        int c;
        for(int i=0;i<nums.length;i++)
        {
            c=0;
            for(int j=0;j<nums.length;j++)
            {
                if( i != j && nums[j]<nums[i]) c++;
            }
            ans[i]=c;
        }
        return ans;
        */

        /*
        //using count sort algo
        int count[] = new int[102];
        int res[] = new int[nums.length];
        for(int x : nums)
        {
            count[x]++;
        }

        for(int i=1;i<count.length;i++)
        {
            count[i] += count[i-1];
        }

        for(int i=0;i<nums.length;i++)
        {
            if(nums[i]==0)  res[i]=0;
            else res[i] = count[nums[i]-1];
        }        
        return res;
        */

        int[] storage = new int[101];
        for(int i = 0; i < nums.length; storage[nums[i++]]++);
        for(int i = 1; i < 101; storage[i] += storage[i++ - 1]);
        for(int i = 0; i < nums.length; nums[i] = ((nums[i] == 0) ? 0 : storage[nums[i] - 1]), i++);
        return nums;
    }
    
	public static void main(String[] args) 
	{
	    int arr[]={8,1,2,2,3};
		int ans[]=smallerNumbersThanCurrent(arr);
		System.out.println("Output : "+Arrays.toString(ans));
	}
}
