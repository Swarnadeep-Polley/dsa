/*
Given three arrays sorted in increasing order. Find the elements that are common in all three arrays.
Note: take care of the duplicates without using any additional Data Structure.

Example 1:
  Input:
  n1 = 6; A = {1, 5, 10, 20, 40, 80}
  n2 = 5; B = {6, 7, 20, 80, 100}
  n3 = 8; C = {3, 4, 15, 20, 30, 70, 80, 120}
  Output: 20 80

Expected Time Complexity: O(n1 + n2 + n3)
Expected Auxiliary Space: O(n1 + n2 + n3)
*/

import java.util.*;
public class Main
{
    public static ArrayList<Integer> commonElements(int A[], int B[], int C[], int n1, int n2, int n3) 
    {
        ArrayList<Integer> al = new ArrayList<>();
        int i=0,j=0,k=0;
        //Integer last = null;
        
        while(i<n1 && j<n2 && k<n3)
        {
            if(A[i]==B[j] && B[j]==C[k])
            {
                if(!al.contains(A[i])) //if(last == null || A[i]!=last)
                {
                    al.add(A[i]);
                   // last = A[i];
                }
                i++;
                j++;
                k++;
            }
            else if(A[i]<B[j])
            {
                i++;
            }
            else if(B[j]<C[k])
            {
                j++;
            }
            else
            {
                k++;
            }
        }
        return al;
    }
	public static void main(String[] args) 
	{
	    int A[]={3,3,3}, B[]={3,3,3}, C[]={3,3,3};
	    
	    ArrayList<Integer> ans = commonElements(A,B,C,A.length,B.length,C.length);
	    
	    for(int x:ans)
	    {
	        System.out.println(ans);
	    }
	    
	}
}


//Approach 2 (Using HashMap)
import java.util.*;
public class Main
{
    public static ArrayList<Integer> commonElements(int A[], int B[], int C[], int n1, int n2, int n3) 
    {
        ArrayList<Integer> al = new ArrayList<>();
        
        HashMap<Integer,Integer> h1 = new HashMap<>();
        HashMap<Integer,Integer> h2 = new HashMap<>();
        HashMap<Integer,Integer> h3 = new HashMap<>();
        
        for(int i=0;i<n1;i++)
        {
            h1.put(A[i],h1.getOrDefault(A[i],0)+1);
        }
        
        for(int i=0;i<n2;i++)
        {
            h2.put(B[i],h2.getOrDefault(B[i],0)+1);
        }
        
        for(int i=0;i<n3;i++)
        {
            h3.put(C[i],h3.getOrDefault(C[i],0)+1);
        }
        
        int i=0;
        while(i<n1)
        {
            if(h2.containsKey(A[i]) && h3.containsKey(A[i]))
            {
                al.add(A[i]);
                h1.remove(A[i]);
                h2.remove(A[i]);
                h3.remove(A[i]);
            }
            i++;
        }
        
        return al;
    }
	public static void main(String[] args) 
	{
	    int A[]={3,3,3}, B[]={3,3,3}, C[]={3,3,3};
	    
	    ArrayList<Integer> ans = commonElements(A,B,C,A.length,B.length,C.length);
	    
	    for(int x:ans)
	    {
	        System.out.println(ans);
	    }
	    
	}
}


