
public class Main
{
    public static int maxProfit(int[] prices) 
    {
        /*
        //Brute force [may cause TLE in large arrays]
        int max=0,prof;

        for(int i=0;i<prices.length;i++)
        {
            for(int j=i+1;j<prices.length;j++)
            {
                prof=prices[j]-prices[i];
                if(prof>max)
                {
                    max = prof;
                }
            }
        }        
        return max;
        */

        /*
        //Using Dynamic Programming
        if(prices == null || prices.length <= 1) return 0;
        int mini = prices[0],maxProf=0;
        for(int i=1;i<prices.length;i++)
        {
            int cost = prices[i]-mini;
            maxProf = Math.max(maxProf,cost);
            mini = Math.min(mini,prices[i]); 
        }
        return maxProf;
        */

        if(prices == null || prices.length <= 1) return 0;
        int maxProfit = 0, minPrice = prices[0];

        for (int currentPrice: prices) 
        {
            if (currentPrice > minPrice) 
            {
                maxProfit = Math.max(maxProfit, currentPrice - minPrice);
            } 
            else 
            {
                minPrice = currentPrice;
            }
        }

        return maxProfit;
    }
    
	public static void main(String[] args) 
	{
		int arr[]={7,1,5,3,6,4};
		System.out.println("The maximum profit is : "+maxProfit(arr));
	}
}
